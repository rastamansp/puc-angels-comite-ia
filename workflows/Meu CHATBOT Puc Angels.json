{
  "name": "Meu CHATBOT Puc Angels",
  "nodes": [
    {
      "parameters": {
        "public": true,
        "options": {
          "customCss": ":root {\n  /* Colors */\n  --chat--color-primary: #e74266;\n  --chat--color-primary-shade-50: #db4061;\n  --chat--color-primary-shade-100: #cf3c5c;\n  --chat--color-secondary: #20b69e;\n  --chat--color-secondary-shade-50: #1ca08a;\n  --chat--color-white: #ffffff;\n  --chat--color-light: #f2f4f8;\n  --chat--color-light-shade-50: #e6e9f1;\n  --chat--color-light-shade-100: #c2c5cc;\n  --chat--color-medium: #d2d4d9;\n  --chat--color-dark: #101330;\n  --chat--color-disabled: #777980;\n  --chat--color-typing: #404040;\n\n  /* Base Layout */\n  --chat--spacing: 1rem;\n  --chat--border-radius: 0.25rem;\n  --chat--transition-duration: 0.15s;\n  --chat--font-family: (\n    -apple-system,\n    BlinkMacSystemFont,\n    'Segoe UI',\n    Roboto,\n    Oxygen-Sans,\n    Ubuntu,\n    Cantarell,\n    'Helvetica Neue',\n    sans-serif\n  );\n\n  /* Window Dimensions */\n  --chat--window--width: 400px;\n  --chat--window--height: 600px;\n  --chat--window--bottom: var(--chat--spacing);\n  --chat--window--right: var(--chat--spacing);\n  --chat--window--z-index: 9999;\n  --chat--window--border: 1px solid var(--chat--color-light-shade-50);\n  --chat--window--border-radius: var(--chat--border-radius);\n  --chat--window--margin-bottom: var(--chat--spacing);\n\n  /* Header Styles */\n  --chat--header-height: auto;\n  --chat--header--padding: var(--chat--spacing);\n  --chat--header--background: var(--chat--color-dark);\n  --chat--header--color: var(--chat--color-light);\n  --chat--header--border-top: none;\n  --chat--header--border-bottom: none;\n  --chat--header--border-left: none;\n  --chat--header--border-right: none;\n  --chat--heading--font-size: 2em;\n  --chat--subtitle--font-size: inherit;\n  --chat--subtitle--line-height: 1.8;\n\n  /* Message Styles */\n  --chat--message--font-size: 1rem;\n  --chat--message--padding: var(--chat--spacing);\n  --chat--message--border-radius: var(--chat--border-radius);\n  --chat--message-line-height: 1.5;\n  --chat--message--margin-bottom: calc(var(--chat--spacing) * 1);\n  --chat--message--bot--background: var(--chat--color-white);\n  --chat--message--bot--color: var(--chat--color-dark);\n  --chat--message--bot--border: none;\n  --chat--message--user--background: var(--chat--color-secondary);\n  --chat--message--user--color: var(--chat--color-white);\n  --chat--message--user--border: none;\n  --chat--message--pre--background: rgba(0, 0, 0, 0.05);\n  --chat--messages-list--padding: var(--chat--spacing);\n\n  /* Toggle Button */\n  --chat--toggle--size: 64px;\n  --chat--toggle--width: var(--chat--toggle--size);\n  --chat--toggle--height: var(--chat--toggle--size);\n  --chat--toggle--border-radius: 50%;\n  --chat--toggle--background: var(--chat--color-primary);\n  --chat--toggle--hover--background: var(--chat--color-primary-shade-50);\n  --chat--toggle--active--background: var(--chat--color-primary-shade-100);\n  --chat--toggle--color: var(--chat--color-white);\n\n  /* Input Area */\n  --chat--textarea--height: 50px;\n  --chat--textarea--max-height: 30rem;\n  --chat--input--font-size: inherit;\n  --chat--input--border: 0;\n  --chat--input--border-radius: 0;\n  --chat--input--padding: 0.8rem;\n  --chat--input--background: var(--chat--color-white);\n  --chat--input--text-color: initial;\n  --chat--input--line-height: 1.5;\n  --chat--input--placeholder--font-size: var(--chat--input--font-size);\n  --chat--input--border-active: 0;\n  --chat--input--left--panel--width: 2rem;\n\n  /* Button Styles */\n  --chat--button--color: var(--chat--color-light);\n  --chat--button--background: var(--chat--color-primary);\n  --chat--button--padding: calc(var(--chat--spacing) * 1 / 2) var(--chat--spacing);\n  --chat--button--border-radius: var(--chat--border-radius);\n  --chat--button--hover--color: var(--chat--color-light);\n  --chat--button--hover--background: var(--chat--color-primary-shade-50);\n  --chat--close--button--color-hover: var(--chat--color-primary);\n\n  /* Send and File Buttons */\n  --chat--input--send--button--background: var(--chat--color-white);\n  --chat--input--send--button--color: var(--chat--color-light);\n  --chat--input--send--button--background-hover: var(--chat--color-primary-shade-50);\n  --chat--input--send--button--color-hover: var(--chat--color-secondary-shade-50);\n  --chat--input--file--button--background: var(--chat--color-white);\n  --chat--input--file--button--color: var(--chat--color-secondary);\n  --chat--input--file--button--background-hover: var(--chat--input--file--button--background);\n  --chat--input--file--button--color-hover: var(--chat--color-secondary-shade-50);\n  --chat--files-spacing: 0.25rem;\n\n  /* Body and Footer */\n  --chat--body--background: var(--chat--color-light);\n  --chat--footer--background: var(--chat--color-light);\n  --chat--footer--color: var(--chat--color-dark);\n}\n\n\n/* You can override any class styles, too. Right-click inspect in Chat UI to find class to override. */\n.chat-message {\n\tmax-width: 50%;\n}",
          "responseMode": "lastNode"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        -576,
        -48
      ],
      "id": "f56be2f3-4b02-4736-8aa1-4acd23459042",
      "name": "When chat message received",
      "webhookId": "50b7645d-b940-4465-917d-ad0923b0d568"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "Seja um instrutor do Treinamento da Puc Angels, abaixo o treinamento de hoje como base de conhecimento\n\n# üöÄ Workshop: Criando Chatbot de IA com N8N\n\n## üìã Sobre o Workshop\n\n**Tema:** Criando Chatbot de IA com N8N  \n**Organiza√ß√£o:** PUC Angels - Aceleradora de Startups  \n**Institui√ß√£o:** Pontif√≠cia Universidade Cat√≥lica do Brasil  \n**Data:** 14/08/2024 √†s 19h  \n**Formato:** Online via Google Meet  \n**Dura√ß√£o:** 1h30min (1h de conte√∫do + 30min Q&A)  \n**Link:** [https://meet.google.com/ryv-quwh-bhy?authuser=0](https://meet.google.com/ryv-quwh-bhy?authuser=0)\n\n## üéØ Objetivos do Workshop\n\n- **Compreender** os fundamentos de chatbots de IA e automa√ß√£o\n- **Explorar** a plataforma N8N para automa√ß√£o de workflows\n- **Implementar** um chatbot funcional com integra√ß√£o de IA\n- **Integrar** ferramentas externas (Azure OpenAI, Pinecone, Google Sheets, Notion)\n- **Aplicar** conceitos pr√°ticos em um projeto real\n\n## üéì P√∫blico-Alvo\n\n- Empreendedores e startups da PUC Angels\n- Desenvolvedores interessados em IA e automa√ß√£o\n- Profissionais de marketing e atendimento ao cliente\n- Estudantes de tecnologia e inova√ß√£o\n- Qualquer pessoa interessada em chatbots e automa√ß√£o\n\n## üìö Pr√©-requisitos\n\n- Conhecimento b√°sico de programa√ß√£o (recomendado)\n- Familiaridade com APIs e integra√ß√µes (opcional)\n- Conta no GitHub (para versionamento)\n- Acesso √† internet durante o workshop\n\n## üîß Configura√ß√£o Pr√©via dos Servi√ßos\n\n**‚ö†Ô∏è IMPORTANTE:** Como o workshop ser√° online e hands-on, √© **OBRIGAT√ìRIO** criar as contas nos servi√ßos abaixo **ANTES** do evento para acompanhar as demonstra√ß√µes pr√°ticas.\n\n### **1. Azure OpenAI (Obrigat√≥rio)**\n- **Objetivo:** Gerar token de acesso √† API de IA\n- **Passos:**\n  1. Acesse [portal.azure.com](https://portal.azure.com)\n  2. Crie um novo recurso \"OpenAI\"\n  3. Configure a regi√£o e plano de pre√ßos\n  4. Anote a **chave da API** e **endpoint**\n- **Tempo estimado:** 15-20 minutos\n- **Custo:** Plano gratuito dispon√≠vel\n\n### **2. N8N (Obrigat√≥rio)**\n- **Objetivo:** Criar workflows junto com o instrutor\n- **Passos:**\n  1. Acesse [n8n.io](https://n8n.io)\n  2. Clique em \"Get Started for Free\"\n  3. Crie uma conta gratuita\n  4. Fa√ßa login e acesse o dashboard\n- **Tempo estimado:** 5 minutos\n- **Custo:** Gratuito para uso b√°sico\n\n### **3. Pinecone (Obrigat√≥rio)**\n- **Objetivo:** Criar index para consultas RAG no Agente de IA\n- **Passos:**\n  1. Acesse [pinecone.io](https://pinecone.io)\n  2. Clique em \"Get Started Free\"\n  3. Crie uma conta gratuita\n  4. Crie um novo **index** (anote o nome)\n  5. Anote a **API Key** e **Environment**\n- **Tempo estimado:** 10-15 minutos\n- **Custo:** Plano gratuito dispon√≠vel\n\n### **4. Notion (Opcional mas Recomendado)**\n- **Objetivo:** Integra√ß√£o com N8N para leitura/escrita de documentos\n- **Passos:**\n  1. Acesse [notion.so](https://notion.so)\n  2. Crie uma conta gratuita\n  3. Crie um workspace\n  4. Crie um documento de teste\n  5. **Crie uma integra√ß√£o:** Acesse [https://www.notion.so/profile/integrations/form/new-integration](https://www.notion.so/profile/integrations/form/new-integration)\n  6. Configure a integra√ß√£o:\n     - Nome: \"N8N Chatbot Integration\"\n     - Descri√ß√£o: \"Integra√ß√£o para chatbot com N8N\"\n     - Selecione o workspace criado\n     - Anote o **Internal Integration Token**\n  7. Compartilhe o documento com a integra√ß√£o (ser√° explicado no workshop)\n- **Tempo estimado:** 15-20 minutos\n- **Custo:** Gratuito para uso b√°sico\n\n### **üìã Checklist de Prepara√ß√£o**\n- [ ] Conta Azure OpenAI criada e API Key anotada\n- [ ] Conta N8N criada e acess√≠vel\n- [ ] Conta Pinecone criada com index configurado\n- [ ] Conta Notion criada (opcional)\n- [ ] **Integra√ß√£o Notion criada e Internal Integration Token anotado**\n- [ ] Todas as credenciais organizadas e acess√≠veis\n- [ ] Conex√£o de internet est√°vel para o workshop\n\n## üõ†Ô∏è Ferramentas e Tecnologias\n\n### Plataforma Principal\n- **N8N** - Plataforma de automa√ß√£o de workflows\n\n### Servi√ßos de IA\n- **Azure OpenAI** - Modelos de linguagem e embeddings\n- **Pinecone** - Banco de dados vetorial\n\n### Integra√ß√µes\n- **Google Sheets** - Armazenamento de dados\n- **Notion** - Leitura e escrita de documentos\n- **Sistemas de mem√≥ria** - Gerenciamento de contexto\n\n## üìñ Conte√∫do Program√°tico\n\n### **üì± Formato Online e Hands-on**\n- **Workshop 100% pr√°tico** - Todos os participantes criar√£o junto com o instrutor\n- **Formato colaborativo** - Compartilhamento de tela e acompanhamento em tempo real\n- **Suporte individual** - D√∫vidas respondidas durante a execu√ß√£o\n- **Material compartilhado** - Todos os recursos dispon√≠veis para download\n\n### **Apresenta√ß√£o e Introdu√ß√£o (5min)**\n- Apresenta√ß√£o do instrutor Pedro Almeida\n- Vis√£o geral do workshop e objetivos\n- Contexto da PUC Angels e inova√ß√£o\n- Verifica√ß√£o de contas e configura√ß√µes dos participantes\n\n### **M√≥dulo 1: Fundamentos e N8N (25min)**\n- Introdu√ß√£o aos chatbots de IA\n- Vis√£o geral da plataforma N8N\n- **Linha do Tempo de Conceitos Fundamentais:**\n  - **RAG (Retrieval-Augmented Generation)** - Combina√ß√£o de busca e gera√ß√£o\n  - **Embeddings** - Representa√ß√£o vetorial de texto\n  - **Mem√≥ria de Hist√≥rico de Chat** - Contexto de conversas\n  - **Banco de Dados Vetorial** - Armazenamento de embeddings\n  - **Consulta Vetorial** - Busca por similaridade sem√¢ntica\n  - **Tools de Agente de IA** - Ferramentas especializadas\n  - **LLMs (Large Language Models)** - Modelos de linguagem\n  - **Prompt Engineering** - Otimiza√ß√£o de instru√ß√µes\n- Arquitetura de chatbots inteligentes\n- Casos de uso e aplica√ß√µes pr√°ticas\n\n### **M√≥dulo 2: Construindo o Chatbot (30min)**\n- Configura√ß√£o r√°pida do ambiente\n- Cria√ß√£o do workflow principal\n- Implementa√ß√£o do trigger de mensagens\n- Configura√ß√£o do agente de IA e integra√ß√µes\n- Demonstra√ß√£o pr√°tica do chatbot \"Marley\"\n\n### **Sess√£o de Perguntas e Respostas (30min)**\n- D√∫vidas sobre o conte√∫do apresentado\n- Discuss√£o sobre casos de uso espec√≠ficos\n- Networking e troca de experi√™ncias\n- Pr√≥ximos passos e recursos adicionais\n\n## üèóÔ∏è Arquitetura do Projeto\n\n### Componentes Principais\n1. **Trigger Node** - Recebimento de mensagens\n2. **AI Agent** - Orquestra√ß√£o e intelig√™ncia\n3. **Chat Model** - Processamento de linguagem natural\n4. **Memory System** - Gerenciamento de contexto\n5. **Vector Store** - Busca sem√¢ntica\n6. **External Tools** - Integra√ß√µes espec√≠ficas\n\n## üß† Conceitos Fundamentais da IA\n\n### **üìÖ Ordem Cronol√≥gica de Apresenta√ß√£o (15min)**\n\n#### **1. RAG (Retrieval-Augmented Generation) - 2min**\n- **Defini√ß√£o:** T√©cnica que combina busca de informa√ß√µes com gera√ß√£o de texto\n- **Funcionamento:** Busca dados relevantes antes de gerar respostas\n- **Vantagem:** Respostas mais precisas e baseadas em fatos\n- **Aplica√ß√£o:** Chatbots que consultam bases de conhecimento\n\n#### **2. Embeddings - 2min**\n- **Defini√ß√£o:** Representa√ß√£o num√©rica (vetorial) de texto\n- **Funcionamento:** Converte palavras/frases em n√∫meros para compara√ß√£o\n- **Vantagem:** Permite busca por similaridade sem√¢ntica\n- **Aplica√ß√£o:** Pinecone, OpenAI Embeddings\n\n#### **3. Mem√≥ria de Hist√≥rico de Chat - 2min**\n- **Defini√ß√£o:** Sistema que mant√©m contexto das conversas\n- **Funcionamento:** Armazena intera√ß√µes anteriores\n- **Vantagem:** Chatbot \"lembra\" do que foi discutido\n- **Aplica√ß√£o:** Simple Memory no N8N\n\n#### **4. Banco de Dados Vetorial - 2min**\n- **Defini√ß√£o:** Sistema especializado em armazenar e buscar embeddings\n- **Funcionamento:** Indexa vetores para busca r√°pida por similaridade\n- **Vantagem:** Busca eficiente em grandes volumes de dados\n- **Aplica√ß√£o:** Pinecone Vector Store\n\n#### **5. Consulta Vetorial - 2min**\n- **Defini√ß√£o:** Busca por similaridade entre vetores de texto\n- **Funcionamento:** Compara embeddings para encontrar conte√∫do relacionado\n- **Vantagem:** Encontra informa√ß√µes mesmo com palavras diferentes\n- **Aplica√ß√£o:** Busca sem√¢ntica na base de conhecimento\n\n#### **6. Tools de Agente de IA - 2min**\n- **Defini√ß√£o:** Ferramentas especializadas que o agente pode usar\n- **Funcionamento:** Extendem as capacidades do chatbot\n- **Vantagem:** Permite a√ß√µes espec√≠ficas (Google Sheets, APIs)\n- **Aplica√ß√£o:** gwan_q, sheets, integra√ß√µes externas\n\n#### **7. LLMs (Large Language Models) - 2min**\n- **Defini√ß√£o:** Modelos de linguagem treinados com grandes volumes de texto\n- **Funcionamento:** Processam e geram texto natural\n- **Vantagem:** Compreens√£o e gera√ß√£o de linguagem humana\n- **Aplica√ß√£o:** Azure OpenAI GPT, Claude, modelos de chat\n\n#### **8. Prompt Engineering - 1min**\n- **Defini√ß√£o:** Arte de criar instru√ß√µes eficazes para LLMs\n- **Funcionamento:** Estrutura comandos para obter respostas desejadas\n- **Vantagem:** Melhora qualidade e relev√¢ncia das respostas\n- **Aplica√ß√£o:** Instru√ß√µes para o AI Agent\n\n### **üí° Dicas de Apresenta√ß√£o para Cada Conceito**\n\n#### **RAG (2min)**\n- **Exemplo pr√°tico:** \"Imagine que voc√™ pergunta sobre um produto e o chatbot busca na base de conhecimento antes de responder\"\n- **Analogia:** \"Como um assistente que consulta um manual antes de dar uma resposta\"\n- **Demonstra√ß√£o:** Mostrar como o chatbot \"Marley\" busca informa√ß√µes sobre Junior Dread\n\n#### **Embeddings (2min)**\n- **Exemplo pr√°tico:** \"Palavras como 'carro' e 'autom√≥vel' geram vetores similares\"\n- **Analogia:** \"Como um tradutor que converte palavras em coordenadas num√©ricas\"\n- **Demonstra√ß√£o:** Mostrar como o OpenAI converte texto em n√∫meros\n\n#### **Mem√≥ria de Chat (2min)**\n- **Exemplo pr√°tico:** \"O chatbot lembra que voc√™ j√° perguntou sobre shows\"\n- **Analogia:** \"Como uma conversa com algu√©m que se lembra do que voc√™s falaram antes\"\n- **Demonstra√ß√£o:** Mostrar o Simple Memory no N8N\n\n#### **Banco Vetorial (2min)**\n- **Exemplo pr√°tico:** \"Pinecone armazena milh√µes de embeddings para busca r√°pida\"\n- **Analogia:** \"Como um √≠ndice de livro, mas para encontrar conte√∫do similar\"\n- **Demonstra√ß√£o:** Mostrar a interface do Pinecone\n\n#### **Consulta Vetorial (2min)**\n- **Exemplo pr√°tico:** \"Buscar por 'm√∫sica reggae' encontra 'Junior Dread' mesmo sem mencionar o nome\"\n- **Analogia:** \"Como encontrar pessoas com interesses similares em uma rede social\"\n- **Demonstra√ß√£o:** Mostrar busca sem√¢ntica na base de dados\n\n#### **Tools de IA (2min)**\n- **Exemplo pr√°tico:** \"O chatbot pode salvar contatos no Google Sheets e criar documentos no Notion automaticamente\"\n- **Analogia:** \"Como dar superpoderes ao chatbot para a√ß√µes espec√≠ficas\"\n- **Demonstra√ß√£o:** Mostrar integra√ß√£o com Google Sheets e Notion\n\n#### **LLMs (2min)**\n- **Exemplo pr√°tico:** \"Azure OpenAI GPT-4 entende e responde em portugu√™s naturalmente\"\n- **Analogia:** \"Como ter uma conversa com algu√©m muito inteligente e bem informado\"\n- **Demonstra√ß√£o:** Mostrar resposta do Azure OpenAI no N8N\n\n#### **Prompt Engineering (1min)**\n- **Exemplo pr√°tico:** \"Instru√ß√µes claras geram respostas mais precisas\"\n- **Analogia:** \"Como fazer uma pergunta bem formulada para obter a resposta certa\"\n- **Demonstra√ß√£o:** Mostrar o prompt do AI Agent\n\n\n\n### Fluxo de Dados\n```\nMensagem ‚Üí AI Agent ‚Üí Processamento ‚Üí Resposta\n    ‚Üì           ‚Üì           ‚Üì\n  Trigger  Azure OpenAI  Pinecone\n    ‚Üì           ‚Üì           ‚Üì\n  N8N      Chat Model  Vector DB\n    ‚Üì           ‚Üì           ‚Üì\n  Notion   Google Sheets  Memory\n```\n\n## üìÅ Estrutura do Projeto\n\n```\nworkshop-chatbot-n8n/\n‚îú‚îÄ‚îÄ README.md\n‚îú‚îÄ‚îÄ prompt.md\n‚îú‚îÄ‚îÄ slides/\n‚îÇ   ‚îú‚îÄ‚îÄ modulo1-fundamentos.md\n‚îÇ   ‚îú‚îÄ‚îÄ modulo2-configuracao.md\n‚îÇ   ‚îú‚îÄ‚îÄ modulo3-construcao.md\n‚îÇ   ‚îú‚îÄ‚îÄ modulo4-avancado.md\n‚îÇ   ‚îî‚îÄ‚îÄ modulo5-deploy.md\n‚îú‚îÄ‚îÄ exemplos/\n‚îÇ   ‚îú‚îÄ‚îÄ workflow-basico.json\n‚îÇ   ‚îú‚îÄ‚îÄ workflow-avancado.json\n‚îÇ   ‚îî‚îÄ‚îÄ configuracao.env\n‚îú‚îÄ‚îÄ exercicios/\n‚îÇ   ‚îú‚îÄ‚îÄ exercicio1-setup.md\n‚îÇ   ‚îú‚îÄ‚îÄ exercicio2-workflow.md\n‚îÇ   ‚îî‚îÄ‚îÄ exercicio3-integracao.md\n‚îî‚îÄ‚îÄ recursos/\n    ‚îú‚îÄ‚îÄ links-uteis.md\n    ‚îú‚îÄ‚îÄ troubleshooting.md\n    ‚îî‚îÄ‚îÄ next-steps.md\n```\n\n## üéØ Projeto Pr√°tico: Chatbot \"Marley\"\n\n### Descri√ß√£o\nImplementa√ß√£o de um chatbot profissional chamado **Marley** para gerenciamento de neg√≥cios do artista brasileiro Junior Dread.\n\n### Funcionalidades\n- **Consultas de IA** via `gwan_q` (base de conhecimento)\n- **Armazenamento** de contatos via Google Sheets\n- **Gest√£o de documentos** via Notion\n- **Mem√≥ria contextual** para conversas\n- **Busca sem√¢ntica** na base de dados\n\n### Casos de Uso\n- Agendamento de shows\n- Contatos de imprensa\n- Informa√ß√µes sobre o artista\n- Gest√£o de parcerias\n- **Gest√£o de documentos** (contratos, propostas, materiais promocionais)\n- **Base de conhecimento** estruturada no Notion\n\n## üìã Checklist de Prepara√ß√£o\n\n### Antes do Workshop\n- [ ] Contas criadas (Azure OpenAI, Pinecone, N8N, Notion)\n- [ ] N8N acess√≠vel via web\n- [ ] APIs configuradas e testadas\n- [ ] Materiais preparados\n- [ ] Ambiente de desenvolvimento configurado\n- [ ] Link do Google Meet salvo e testado\n\n### Durante o Workshop\n- [ ] Apresenta√ß√£o dos conceitos\n- [ ] Demonstra√ß√£o pr√°tica\n- [ ] Exerc√≠cios hands-on\n- [ ] Resolu√ß√£o de d√∫vidas\n- [ ] Feedback dos participantes\n\n### Ap√≥s o Workshop\n- [ ] Compartilhamento de materiais\n- [ ] Acesso aos recursos\n- [ ] Suporte p√≥s-workshop\n- [ ] Avalia√ß√£o e feedback\n\n## üîó Recursos Adicionais\n\n### Documenta√ß√£o\n- [N8N Documentation](https://docs.n8n.io/)\n- [Azure OpenAI Documentation](https://learn.microsoft.com/en-us/azure/ai-services/openai/)\n- [Pinecone Documentation](https://docs.pinecone.io/)\n- [Notion API Documentation](https://developers.notion.com/)\n\n### Comunidade\n- [N8N Community](https://community.n8n.io/)\n- [PUC Angels Network](https://pucangels.com.br/)\n\n### üìö Materiais do Workshop\n- [Gloss√°rio de IA](glossario-ia.md) - Conceitos e defini√ß√µes completas\n- [Prompt do Chatbot](prompt.md) - Instru√ß√µes para o AI Agent\n\n## üìû Suporte e Contato\n\n- **Organizador:** Pedro Almeida\n- **Email:** pedro.almeida@pucangels.org\n- **GitHub:** [@rastamansp](https://github.com/rastamansp)\n- **LinkedIn:** [Pedro Almeida](https://www.linkedin.com/in/pedro-halmeida/)\n\n## üìù Notas para o Instrutor\n\n### Pontos de Aten√ß√£o\n- Verificar conectividade de internet\n- Ter contas de backup para as APIs\n- Preparar exemplos de fallback\n- Cronometrar rigorosamente: 5min + 25min + 30min + 30min\n- Manter o foco no conte√∫do essencial para o tempo limitado\n\n### Adapta√ß√µes\n- Manter o cronograma rigoroso devido ao tempo limitado\n- Focar em demonstra√ß√µes pr√°ticas e casos de uso reais\n- Encorajar perguntas durante a sess√£o de Q&A\n- Fornecer materiais complementares para estudo posterior\n- Priorizar o que √© essencial para entender e implementar um chatbot b√°sico\n\n---\n\n**üéâ Prepare-se para uma jornada incr√≠vel no mundo da automa√ß√£o e IA!**\n\n*Este workshop foi desenvolvido para a PUC Angels, combinando teoria e pr√°tica para criar solu√ß√µes reais de chatbot inteligente.*\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -336,
        -64
      ],
      "id": "fffbd661-24c1-4db5-a14c-8c3d9ae4c272",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -496,
        192
      ],
      "id": "543b3be7-51a7-43fe-85bd-0210281cd972",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "6SIwID2OFtiK1fM0",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -304,
        192
      ],
      "id": "ef43e0e4-046b-4358-9e5d-e0f7ef60b2af",
      "name": "Simple Memory"
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "4a330477-dffe-4144-9152-40e41d897ae4",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "03c73b63e8fc05150a595bdf093e08bf089f2c024488a3efab14f8512d13a837"
  },
  "id": "s8lipOzvY0eITY8u",
  "tags": []
}